<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABw
        CgAAAk1TRnQBSQFMAgEBAwEAASABAAEgAQABHgEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF4
        AwABGAMAAQEBAAEgBgABLf8A/wD/AP8A7gADKwFDA0gBiQNHAcQDPwHSAzIB3wM+AdQDRgHCA0wBoQM9
        AWsDDAEQxAADDQER6AADPgFsAyEB7QMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMe
        Ae8DTAGxAyQBNrgAAykBPgM/AXCgAAMuAUkDDAEQOAADHwEtAzMB4AMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DHgHvA0UBgAMEAQWsAAMkATYDAAH/Aw0BEqAA
        AzQBVgNEAZQDBwEKMAADJAE1AwAB/wMAAf8DAAH/AwAB/wMJAfoDRQGAAyMBNAMZASMDDwEUAxIBGQMk
        ATYDOQFfA0kBvgMSAfcDAAH/AwAB/wMAAf8DSQGQAwgBC6QAAx8BLQMAAf8DHgHvpAADHAEnAwAB/gNE
        AZADAwEEKAADFgEeAwAB/wMAAf8DAAH/AwMB/QM1AVgkAAMoATwDSgGkAwAB/wMAAf8DAAH/A0kBj6AA
        AxgBIgMAAf4DAAH/A0sBoqgAAzkByQMAAf8DQwGKAwABASQAAzQB3gMAAf8DAAH/AygB6AMUARwsAAMG
        AQgDRQGBAwAB/wMAAf8DAAH/AzMBUpgAAw8BFAMYAfMDAAH/AwAB/wM5AV+oAANDAYQDAAH/AwAB/wNC
        AYAgAAMyAVEDAAH/AwAB/wMZAfIDFAEcOAADSQGRAwAB/wMAAf8DRgHClAADDAEQAzIB4gMAAf8DAAH/
        AwMB/AMLAQ+oAAMuAUkDAAH/AwAB/wMAAf8DPwF1HAADTAGmAwAB/wMAAf8DRAF9PAADDAEQAyEBMAMZ
        ASMDBwEKkAADCgEOAzIB3wMAAf8DAAH/AwAB/wMcAfEDTAGqA0wBqgNMAaoDTAGqA0wBqgNMAaoDTAGq
        A0wBqgNMAaoDTAGqA0wBqgNMAaoDTAGqA0wBqgNMAaoDTAGqA0wBqgNMAaoDSQGQAwwBEBgAAw8BFAMP
        ARQDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMP
        ARQDEQEXAwwB9wMAAf8DAAH/AwAB/wM9AXAYAAMeAe8DAAH/AwAB/wMMARDYAAMFAQcDQQHRAwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A0ABcRAAAyEBMAMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwIB/QM9AXAQAAMKAQ4DAAH/AwAB/wMeAe/gAAM/AXADAwH9AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DIQEwEAADPgFxAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AzMB0QMFAQcMAAMEAQYDAAH/AwAB/wMSAfbkAAM/AXADAAH/AwAB/wMAAf8DEgH3AxEBFwMP
        ARQDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMP
        ARQDDwEUGAADDAEQA0QBkANDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGq
        A0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgMTAfEDAAH/AwAB/wMAAf8DJgHfAwoBDhQAAzkB2wMA
        Af8DAAH/AycBOuQAA0EBdQMAAf8DAAH/AwAB/wMvAUmoAAMLAQ8DAgH8AwAB/wMAAf8DJQHiAwwBEBgA
        A0wBrQMAAf8DAAH/A0gBjOgAA0UBgAMAAf8DAAH/A0cBhKgAAzgBXwMAAf8DAAH/AxIB8wMPARQcAAMu
        AUgDAAH/AwAB/wMTAfUDOQFf5wABAQNIAYoDAAH/A0YByagAA0MBogMAAf8DAAH+AxgBIiQAA0wBoAMA
        Af8DAAH/Ax4B7wM5AV8QAAMSARkDRQGAA0oBtQNIAYsDNAFUAx8BLQMKAQ64AAMDAQQDSQGQAwAB/gMc
        ASekAAMVAe8DAAH/Ax8BLSgAAw4BEwNCAcwDAAH/AwAB/wMPAfgDSwGeAxoBJAwAAwwBEANHAYcDAAH/
        AwAB/wMAAf8DHgHvAzUBVrgAAwcBCgNKAZQDNQFWoAADDQESAwAB/wMkATYwAAMdASkDQwHOAwAB/wMA
        Af8DAAH/AxwB8ANJAb8DSQGPAzQBVQMrAUIDMwFSA0IBzAMAAf8DAAH/AwAB/wMNARG8AAMMARADLwFJ
        oAADPQFwAykBPjgAAwwBEANHAYgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMeAe//AGkAAw0BEUQAAyoBQANKAZMDHgHvAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DSwGw/wC5AAMMARADKgFAAz4BbANJAZEDTAGgA0sBnANIAYkDPAFnA0wBsQNDAXz/ANkAA0EBdgMw
        AU3/ANkAAyABLgMMARCgAAFCAU0BPgcAAT4DAAEoAwABeAMAARgDAAEBAQABAQUAAYABARYAA/8BAAv/
        AcAEAAv/AcAEAAj/AfwBAAH/AcAEAAH/Ab8G/wHwAQABPwHABAAB/wE/BP8BzwH/AcABAAEPAcAEAAH+
        AT8E/wHHAf8BgAEAAQcBwAQAAfwBfwT/AcMB/wEDAf4BBwHABAAB+AF/BP8B4QH/AQcB/wEDAcAEAAHw
        AX8E/wHhAf4BDwH/AcMBwAQAAeABfwT/AeAB/gEfAf8BwwHABAABwAIAAQ8BwAIAAX4BHwL/AcAEAAGA
        AgABDwMAATwBPwL/AcAEAAHAAgABDwMAARwBPwL/AcAEAAHgAgABPwMAAT4BHwL/AcAEAAHwAX8E/wHg
        AX4BHwL/AcAEAAH4AX8E/wHgAf4BDwL/AcAEAAH4AX8E/wHhAf8BBwGAAf8BwAQAAfwBPwT/AeMB/wEB
        AcABfwHABAAB/gE/BP8BxwH/AYABAAF/AcAEAAH/AT8E/wHPAf8BwAEAAf8BwAQABv8B3wH/AfABAAH/
        AcAEAAj/AfwBAAH/AcAEAAn/AfwB/wHABAAJ/wH8Af8BwAQACw==
</value>
  </data>
</root>